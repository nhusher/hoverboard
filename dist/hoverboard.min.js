!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.Hoverboard=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b){var c=a("./renderingInterface");b.exports=L.TileLayer.Canvas.extend({options:{async:!0},initialize:function(a,b){L.TileLayer.Canvas.prototype.initialize.call(this,b),this._tileCache={},this._renderers=[],this.setUrl(a),this.on("tileunload",function(a){a.tile.abort&&a.tile.abort(),a.tile.abort=null})},projector:function(a,b,c){var d=Math.pow(2,a.z),e=40075016.68557849,f=e/d,g=a.x%d,h=a.y%d,i={top:e/2-(h+1)/d*e,left:-(e/2)+g/d*e};return i.bottom=i.top+f,i.right=i.left+f,d3.geo.transform({point:function(a,b){var d=L.CRS.EPSG3857.project({lat:b,lng:a});d.x=(d.x-i.left)/f,d.y=1-(d.y-i.top)/f,d.x*=c,d.y*=c,this.stream.point(d.x,d.y)}})},clippedProjector:function(a,b,c){var d=this.projector(a,b,c),e=d3.geo.clipExtent().extent([[-8,-8],[c+8,c+8]]);return{stream:function(a){return d.stream(e.stream(a))}}},_fetchTile:function(a,b){var c=this._url+"@@"+JSON.stringify(a);if("undefined"!=typeof this._tileCache[c])return b(null,this._tileCache[c]),function(){};var d=this,e=this.getTileUrl(a);return this.fetch(e,function(a,e){a||(d._tileCache[c]=d.parse(e)),b(a,d._tileCache[c])})},render:function(a,b){if("function"==typeof b)return this._renderers.push({layer:a,run:b}),this;var d=new c(this,a);return this._renderers.push({layer:a,run:d.run.bind(d)}),d},drawData:function(a,b,c,d){var e=a.getContext("2d"),f=a.width;e.clearRect(0,0,f,f);var g={};if(this._renderers.length){var h=this;this._renderers.forEach(function(a){c[a.layer]&&("undefined"==typeof g[a.layer]&&(g[a.layer]=d3.geo.path().projection(h.clippedProjector(b,a.layer,f)).context(e)),a.run(e,c[a.layer].features,b,function(b){"object"!=typeof b||Array.isArray(b)||(b=[b]),e.beginPath(),b.forEach(g[a.layer])}))}),d()}else d(new Error("No renderer specified!"))},drawTile:function(a,b){if("undefined"==typeof this._url)return void this.tileDrawn(a);this._adjustTilePoint(b);var c,d=this;a.abort=this._fetchTile(b,function(e,f){if(e)throw d.tileDrawn(a),e;var g=document.createElement("canvas");d.drawData(g,a,b,f,function(){d.tileDrawn(a)},function(b){if(c&&window.cancelAnimationFrame(c),c=window.requestAnimationFrame(function(){a.width=g.width,a.height=g.height,a.getContext("2d").drawImage(g,0,0),d.tileDrawn(a)}),b)throw b})})}}),b.exports.json=b.exports.extend({fetch:function(a,b){var c=d3.json(a,function(a,c){b(a,c.response||c)});return c.abort.bind(c)}}),b.exports.geojson=b.exports.json.extend({parse:function(a){return{geojson:a}}}),b.exports.topojson=b.exports.json.extend({parse:function(a){var b={};for(var c in a.objects)b[c]=topojson.feature(a,a.objects[c]);return b}}),b.exports.mvt=b.exports.extend({fetch:function(a,b){var c=d3.xhr(a).responseType("arraybuffer").get(function(a,c){b(a,c.response||c)});return c.abort.bind(c)},parse:function(a){var b=new VectorTile(new pbf(new Uint8Array(a))),c={};"undefined"==typeof this.layerExtents&&(this.layerExtents={});for(var d in b.layers)this.layerExtents[d]=b.layers[d].extent,c[d]=b.layers[d].toGeoJSON();return c},projector:function(a,b,c){var d=this;return d3.geo.transform({point:function(a,e){a=a/d.layerExtents[b]*c,e=e/d.layerExtents[b]*c,this.stream.point(a,e)}})}})},{"./renderingInterface":2}],2:[function(a,b){var c=function(a,b){this.layer=a,this.layerName=b,this.instructions=[],this.whereConditions=[];var c=this;Object.keys(a.__proto__).forEach(function(b){c[b]=function(){return a[b].apply(a,arguments)}}),["render","data","mode","addTo"].forEach(function(b){c[b]=function(){return a[b].apply(a,arguments)}})};c.prototype.minZoom=function(a){return this.minZoom=a,this},c.prototype.maxZoom=function(a){return this.maxZoom=a,this},c.prototype.fill=function(a){return this.instructions.push({type:"fill",color:a}),this},c.prototype.stroke=function(a,b){return this.instructions.push({type:"stroke",width:a,color:b}),this},c.prototype.fillBy=function(a,b,c){return this.fill(function(d){return b[d.properties[a]]||c}),this},c.prototype.strokeBy=function(a,b,c){return this.stroke(function(d){return b[d.properties[a]]||c}),this},c.prototype._where=function(a){var b=a.field,c=a.value;if("undefined"==typeof c)if("string"==typeof b)this.where(function(a){return a.properties[b]?!0:!1},void 0,a.invert);else if("object"==typeof b)for(var d in b)this.where(d,b[d],a.invert);else{if("function"!=typeof b)throw new Error("with RenderingInterface.where(field, value) if value is undefined then field must be a string, object, or function!");if(a.invert){var e=b;b=function(){return!e.apply(null,arguments)}}this.whereConditions.push(b)}else if("string"==typeof c||"number"==typeof c)this.where(function(a){return a.properties[b]==c},void 0,a.invert);else{if("object"!=typeof c||!Array.isArray(c))throw new Error("RenderingInterface.where(field, value) cannot be called with field as type "+typeof b+" and value as type "+typeof c);this.where(function(a){return-1!=c.indexOf(a.properties[b])},void 0,a.invert)}return this},c.prototype.where=function(a,b,c){return this._where({field:a,value:b,invert:c})},c.prototype.whereNot=function(a,b){return this._where({field:a,value:b,invert:!0})},c.prototype.run=function(a,b,c,d){"number"==typeof this.minZoom&&c.z<this.minZoom||"number"==typeof this.maxZoom&&c.z>this.maxZoom||(this.whereConditions.forEach(function(a){b=b.filter(a)}),this.instructions.forEach(function(c){if("fill"==c.type)if("string"==typeof c.color)a.fillStyle=c.color,d(b),a.fill();else{if("function"!=typeof c.color)throw new Error("fill color must be string or function, is type "+typeof c.color);b.forEach(function(b){a.fillStyle=c.color(b),d(b),a.fill()})}else if("stroke"==c.type)if("number"==typeof c.width&&"string"==typeof c.color)a.lineWidth=c.width,a.strokeStyle=c.color,d(b),a.stroke();else{if("function"!=typeof c.width&&"function"!=typeof c.color)throw new Error("Expected stroke(number or function, string or function) or stroke(function), got stroke("+typeof c.width+", "+typeof c.color+")");b.forEach(function(b){var e="function"==typeof c.width?c.width(b):c.width,f="function"==typeof c.color?c.color(b):c.color;"undefined"==typeof c.color&&Array.isArray(e)&&(f=e[1],e=e[0]),d(b),a.stroke()})}}))},b.exports=c},{}]},{},[1])(1)});